{"version":3,"sources":["webpack:///webpack/bootstrap fb7ae61163dcfe8d309c","webpack:///./lib/main.js","webpack:///./lib/flock3d.js","webpack:///./lib/bird3d.js","webpack:///./lib/predator.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;AC5DD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,0FAAuC,mDAAmD;AAC1F;AACA;AACA,2CAA2C,mFAAmF;AAC9H;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;AChOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fb7ae61163dcfe8d309c","import Flocky from './flock3d';\n\nlet numBirds = 0;\n\n$( \"#slider-1\" ).bind( \"slidechange\", function(event, ui) {\n    numBirds = ui.value;\n});\n\nconst vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\nconst vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n\nconst f = new Flocky(vw, vh, 800);\nf.populateFlock();\n\nlet options = document.getElementById(\"options\");\nlet pause = document.getElementById(\"pause\");\n\ndocument.getElementById(\"header\").addEventListener('click', () => {\n  if (options.style.display === 'flex') {\n    options.style.display = 'none';\n  } else {\n    options.style.display = 'flex';\n  }\n});\n\nlet help = document.getElementById('info');\n\ndocument.getElementById('helpheader').addEventListener('click', () => {\n  if (help.style.display === 'block') {\n    help.style.display = 'none';\n  } else {\n    help.style.display = 'block';\n  }\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementById(\"game-canvas\");\n  canvasEl.width = vw;\n  canvasEl.height = vh;\n\n  const ctx = canvasEl.getContext(\"2d\");\n\n  let timer = setInterval(() => {\n    f.draw(ctx);\n  }, 20);\n\n  let counter = 2;\n  canvasEl.addEventListener('click', () => {\n    if (counter % 2 === 0) {\n      clearInterval(timer);\n      counter += 1;\n      pause.style.display = 'block';\n    } else {\n      timer = setInterval(() => {\n        f.draw(ctx);\n      }, 20);\n      counter += 1;\n      pause.style.display = 'none';\n    }\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 0\n// module chunks = 0","import Birdy from './bird3d';\nimport Predator from './predator';\n\nexport default class Flocky {\n  constructor(dimX, dimY, dimZ) {\n    this.numBirds = 300;\n    this.birds = [];\n    this.neighborRadius = 60;\n    this.separationRadius = 40;\n    this.dims = [dimX, dimY, dimZ];\n    this.getSliderVals = this.getSliderVals.bind(this);\n\n    // Sprites\n    this.img = new Image();\n    this.img.src = 'assets/images/flappybird.png';\n    this.imgFlip = new Image();\n    this.imgFlip.src = 'assets/images/flappybirdflip.png';\n\n    this.birdImg = new Image();\n    this.birdImg.src = 'assets/images/bird.png';\n    this.birdImgFlip = new Image();\n    this.birdImgFlip.src = 'assets/images/birdflipped.png';\n  }\n\n  getSliderVals() {\n    this.cohesion = $(\"#cohesion\").val();\n    this.alignment = $(\"#alignment\").val();\n    this.separation = $(\"#separation\").val();\n    this.velocity = $(\"#velocity\").val();\n    this.radius = $(\"#radius\").val();\n    this.numBirds = $(\"#numbirds\").val();\n  }\n\n  populateFlock() {\n    const colors = ['white','red','blue','green','purple'];\n    for (let i = 0; i < this.numBirds; i++) {\n      const rand = colors[Math.floor(Math.random() * colors.length)];\n      const pos = this.randomPos();\n      const vel = this.randomVel();\n      this.birds.push(new Birdy(this, {key: i, pos: pos, vel: vel, radius: 4, color: rand}));\n    }\n    // Possible predator bird with different behavior.\n    // this.birds.push(new Predator(this, {key: -1, pos: this.randomPos(), vel: this.randomVel(), radius: 20, color: 'orange'}));\n  }\n\n  randomPos() {\n    const xPos = Math.floor(Math.random()*this.dims[0]);\n    const yPos = Math.floor(Math.random()*this.dims[1]);\n    const zPos = Math.floor(Math.random()*this.dims[2]);\n    return [xPos, yPos, zPos];\n  }\n\n  randomVel() {\n    const xVel = Math.floor(Math.random()*5) - 2.5;\n    const yVel = Math.floor(Math.random()*5) - 2.5;\n    const zVel = Math.floor(Math.random()*5) - 2.5;\n    return [xVel, yVel, zVel];\n  }\n\n  moveBirds() {\n    for (let i = 0; i < this.birds.length; i++) {\n      this.birds[i].move();\n    }\n  }\n\n  draw(ctx) {\n    this.getSliderVals();\n    this.moveBirds();\n    ctx.clearRect(0, 0, this.dims[0], this.dims[1]);\n    for (let i = 0; i < this.birds.length; i++) {\n      if (this.birds[i].key < this.numBirds) {\n        this.birds[i].draw(ctx);\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/flock3d.js\n// module id = 3\n// module chunks = 0","export default class Birdy {\n  constructor(flock, hash) {\n    this.flock = flock;\n    this.key = hash['key'];\n    this.pos = hash['pos'];\n    this.vel = hash['vel'];\n    this.radius = this.flock.radius;\n    this.color = hash['color'];\n    this.counter = 0;\n    this.frame = -1;\n    this.birdInd = -1;\n    this.changeVel = this.changeVel.bind(this);\n  }\n\n  changeVel() {\n\n    // Defaults 0.2, 0.5, 0.2\n    const sepFactor = this.flock.separation;\n    const alignmentFactor = this.flock.alignment;\n    const cohesionFactor = this.flock.cohesion;\n\n    const birds = this.flock.birds;\n    let centroid = [0, 0, 0];\n    let flockVel = [0, 0, 0];\n\n    let count = 0;\n    for (let i = 0; i < birds.length; i++) {\n      const bird = birds[i];\n\n      // Distance\n      const xDif = bird.pos[0] - this.pos[0];\n      const yDif = bird.pos[1] - this.pos[1];\n      const zDif = bird.pos[2] - this.pos[2];\n      const dist = Math.sqrt(xDif*xDif + yDif*yDif + zDif*zDif);\n\n      if (dist < this.flock.neighborRadius && bird.key !== this.key && bird.key < this.flock.numBirds) {\n        centroid[0] += bird.pos[0];\n        centroid[1] += bird.pos[1];\n        centroid[2] += bird.pos[2];\n\n        flockVel[0] += bird.vel[0];\n        flockVel[1] += bird.vel[1];\n        flockVel[2] += bird.vel[2];\n\n        if (dist < this.flock.separationRadius) {\n          const xSep = xDif/dist;\n          const ySep = yDif/dist;\n          const zSep = zDif/dist;\n\n          const force = this.flock.separationRadius - dist;\n\n          // Separation\n          this.vel[0] += -1 * xSep * force * sepFactor;\n          this.vel[1] += -1 * ySep * force * sepFactor;\n          this.vel[2] += -1 * zSep * force * sepFactor;\n\n          // Predator\n          // if (bird.key === -1) {\n          //   if (xDif < 0) {\n          //     this.vel[0] += 10;\n          //   } else {\n          //     this.vel[0] -= 10;\n          //   }\n          //\n          //   if (yDif < 0) {\n          //     this.vel[1] += 10;\n          //   } else {\n          //     this.vel[1] -= 10;\n          //   }\n          // }\n        }\n\n        count += 1;\n      }\n    }\n\n    if (count > 0) {\n      centroid[0] = centroid[0] / count;\n      centroid[1] = centroid[1] / count;\n      centroid[2] = centroid[2] / count;\n\n      // Alignment\n      flockVel[0] = flockVel[0] / count;\n      flockVel[1] = flockVel[1] / count;\n      flockVel[2] = flockVel[2] / count;\n\n      this.vel[0] += flockVel[0] * alignmentFactor;\n      this.vel[1] += flockVel[1] * alignmentFactor;\n      this.vel[2] += flockVel[2] * alignmentFactor;\n\n\n      // Cohesion\n      let delVel = [centroid[0] - this.pos[0], centroid[1] - this.pos[1], centroid[2] - this.pos[2]];\n      let delMag = Math.sqrt(delVel[0]*delVel[0] + delVel[1]*delVel[1] + delVel[2]*delVel[2]);\n      delVel[0] = delVel[0] / delMag;\n      delVel[1] = delVel[1] / delMag;\n      delVel[2] = delVel[2] / delMag;\n\n      this.vel[0] += delVel[0] * cohesionFactor;\n      this.vel[1] += delVel[1] * cohesionFactor;\n      this.vel[2] += delVel[2] * cohesionFactor;\n\n    }\n  }\n\n  move() {\n    this.changeVel();\n\n    let mag = Math.sqrt(this.vel[0]*this.vel[0] + this.vel[1]*this.vel[1] + this.vel[2]*this.vel[2]);\n\n    if (mag > this.flock.velocity) {\n      this.vel[0] = this.vel[0] / mag * this.flock.velocity;\n      this.vel[1] = this.vel[1] / mag * this.flock.velocity;\n      this.vel[2] = this.vel[2] / mag * this.flock.velocity;\n    }\n\n    // Avoid Walls X\n    const wallX = this.flock.dims[0];\n    const wallY = this.flock.dims[1];\n    const wallZ = this.flock.dims[2];\n\n    if (this.pos[0] > (wallX - 100)) {\n      const diffX = wallX - this.pos[0];\n      this.vel[0] += -1 / (diffX / 25);\n    }\n    if (this.pos[0] < 100) {\n      this.vel[0] += 1 / (this.pos[0] / 25);\n    }\n\n    // Avoid Walls Y\n    if (this.pos[1] > wallY - 100) {\n      const diffY = wallY - this.pos[1];\n      this.vel[1] += -1 / (diffY / 25);\n    }\n    if (this.pos[1] < 100) {\n      this.vel[1] += 1 / (this.pos[1] / 25);\n    }\n\n    // Avoid Walls Z\n    if (this.pos[2] > wallZ - 100) {\n      const diffZ = wallZ - this.pos[2];\n      this.vel[2] += -1 / (diffZ / 25);\n    }\n    if (this.pos[2] < 100) {\n      this.vel[2] += 1 / (this.pos[2] / 25);\n    }\n\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n    this.pos[2] += this.vel[2];\n  }\n\n  draw(ctx) {\n\n    let theme = $('input[name=theme]:checked').val();\n\n    const depth = this.pos[2];\n    const rad = (800 - depth)/800 * 7 + 2;\n    const colorVal = (rad - 2) * (100 / 7);\n\n    if (theme === 'balls') {\n\n      // Balls\n      ctx.beginPath();\n      ctx.arc(this.pos[0], this.pos[1], rad, 2*Math.PI, false);\n      ctx.lineWidth = 0;\n      ctx.fillStyle = this.color;\n      ctx.fill();\n      ctx.closePath();\n\n    } else if (theme === 'flappy') {\n\n      // Flappy birds\n      const fac = Math.floor(((800 - depth) / 1600 + 0.5)*100)/100;\n      let xSize = 40 * fac;\n      xSize += (this.vel[2] - 6);\n      const ySize = 30 * fac;\n\n      const xLoc = [0, 28, 56];\n      const yLoc = 490;\n      const xLocFlip = [490, 462, 434];\n      let num = this.frame;\n\n      if (this.counter % 20 === 0) {\n        this.frame = Math.floor(Math.random() * 3);\n      }\n\n      if (this.vel[0] > 0) {\n        ctx.drawImage(this.flock.img, xLoc[num], yLoc, 20, 15, this.pos[0], this.pos[1], xSize, ySize);\n      } else {\n        ctx.drawImage(this.flock.imgFlip, xLocFlip[num], yLoc, 20, 15, this.pos[0], this.pos[1], xSize, ySize);\n      }\n      this.counter += 1;\n    } else {\n\n      // Birdy\n\n      const fac = Math.floor(((800 - depth) / 1600 + 0.5)*100)/100;\n      let xSize = 64 * fac * 1.5;\n      xSize += (this.vel[2] - 6);\n      const ySize = 55 * fac * 1.5;\n\n      const xLoc = [0, 64, 128, 192];\n      const yLoc = [14, 80];\n\n      if (this.counter % 6 === 0) {\n        this.frame += 1;\n      }\n\n      if (this.counter % 24 === 0) {\n        this.birdInd += 1;\n      }\n      let num = this.frame % 4;\n      let yInd = this.birdInd % 2;\n\n      if (this.vel[0] > 0) {\n        ctx.drawImage(this.flock.birdImg, xLoc[num], yLoc[yInd], 64, 55, this.pos[0], this.pos[1], xSize, ySize);\n      } else {\n        ctx.drawImage(this.flock.birdImgFlip, xLoc[num], yLoc[yInd], 64, 55, this.pos[0], this.pos[1], xSize, ySize);\n      }\n      this.counter += 1;\n\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bird3d.js\n// module id = 4\n// module chunks = 0","export default class Predator {\n  constructor(flock, hash) {\n    this.flock = flock;\n    this.key = hash['key'];\n    this.pos = hash['pos'];\n    this.vel = hash['vel'];\n    this.radius = hash['radius'];\n    this.color = hash['color'];\n  }\n\n  move() {\n    // Avoid Walls X\n    const wallX = this.flock.dims[0];\n    const wallY = this.flock.dims[1];\n    const wallZ = this.flock.dims[2];\n\n    if (this.pos[0] > (wallX - 100)) {\n      const diffX = wallX - this.pos[0];\n      this.vel[0] += -1 / (diffX / 25);\n    }\n    if (this.pos[0] < 100) {\n      this.vel[0] += 1 / (this.pos[0] / 25);\n    }\n\n    // Avoid Walls Y\n    if (this.pos[1] > wallY - 100) {\n      const diffY = wallY - this.pos[1];\n      this.vel[1] += -1 / (diffY / 25);\n    }\n    if (this.pos[1] < 100) {\n      this.vel[1] += 1 / (this.pos[1] / 25);\n    }\n\n    // Avoid Walls Z\n    if (this.pos[2] > wallZ - 100) {\n      const diffZ = wallZ - this.pos[2];\n      this.vel[2] += -1 / (diffZ / 25);\n    }\n    if (this.pos[2] < 100) {\n      this.vel[2] += 1 / (this.pos[2] / 25);\n    }\n\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n    this.pos[2] += this.vel[2];\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 2*Math.PI, false);\n    ctx.lineWidth = 0;\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/predator.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}