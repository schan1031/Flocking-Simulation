{"version":3,"sources":["webpack:///webpack/bootstrap b3cff1f62ffea51fe510","webpack:///./lib/main.js","webpack:///./lib/bird.js","webpack:///./lib/flock.js","webpack:///./lib/flock3d.js","webpack:///./lib/bird3d.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;;;;AAID;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;AC7HA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,wFAAsC,sDAAsD;AAC5F;AACA,uCAAuC,kFAAkF;AACzH;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;AC3DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,0FAAuC,mDAAmD;AAC1F;AACA,uCAAuC,kFAAkF;AACzH;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,SAAS,IAAI,SAAS,IAAI,SAAS;AACjE;AACA;AACA;AACA;AACA;AAAA;AAAA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b3cff1f62ffea51fe510","import Bird from './bird';\nimport Flock from './flock';\nimport Flocky from './flock3d';\n\nconst f = new Flocky(300);\nf.populateFlock();\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementById(\"game-canvas\");\n  canvasEl.width = 1600;\n  canvasEl.height = 900;\n\n  const ctx = canvasEl.getContext(\"2d\");\n\n  setInterval(() => {\n    f.draw(ctx);\n  }, 20);\n});\n\n\n\n// const game = new GameView(ctx);\n// game.start();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 0\n// module chunks = 0","export default class Bird {\n  constructor(flock, hash) {\n    this.flock = flock;\n    this.key = hash['key'];\n    this.pos = hash['pos'];\n    this.vel = hash['vel'];\n    this.radius = hash['radius'];\n    this.color = hash['color'];\n\n    this.changeVel = this.changeVel.bind(this);\n  }\n\n  changeVel() {\n\n    // Defaults 0.2, 0.5, 0.2\n    const sepFactor = 0.2;\n    const alignmentFactor = 0.5;\n    const cohesionFactor = 0.5;\n\n\n    const birds = this.flock.birds;\n    let centroid = [0, 0];\n    let flockVel = [0, 0];\n\n    let count = 0;\n    for (let i = 0; i < birds.length; i++) {\n      const bird = birds[i];\n\n      // Distance\n      const xDif = bird.pos[0] - this.pos[0];\n      const yDif = bird.pos[1] - this.pos[1];\n      const dist = Math.sqrt(xDif*xDif + yDif*yDif);\n\n      if (dist < this.flock.neighborRadius && bird.key !== this.key) {\n        centroid[0] += bird.pos[0];\n        centroid[1] += bird.pos[1];\n\n        flockVel[0] += bird.vel[0];\n        flockVel[1] += bird.vel[1];\n\n        if (dist < this.flock.separationRadius) {\n          const xSep = xDif/dist;\n          const ySep = yDif/dist;\n\n          const force = this.flock.separationRadius - dist;\n\n          // Separation\n          this.vel[0] += -1 * xSep * force * sepFactor;\n          this.vel[1] += -1 * ySep * force * sepFactor;\n        }\n\n        count += 1;\n      }\n    }\n\n    if (count > 0) {\n      centroid[0] = centroid[0] / count;\n      centroid[1] = centroid[1] / count;\n\n      // Alignment\n      flockVel[0] = flockVel[0] / count;\n      flockVel[1] = flockVel[1] / count;\n\n      this.vel[0] += flockVel[0] * alignmentFactor;\n      this.vel[1] += flockVel[1] * alignmentFactor;\n\n\n      // Cohesion\n      let delVel = [centroid[0] - this.pos[0], centroid[1] - this.pos[1]];\n      let delMag = Math.sqrt(delVel[0]*delVel[0] + delVel[1]*delVel[1]);\n      delVel[0] = delVel[0] / delMag;\n      delVel[1] = delVel[1] / delMag;\n\n      this.vel[0] += delVel[0] * cohesionFactor;\n      this.vel[1] += delVel[1] * cohesionFactor;\n\n    }\n  }\n\n  move() {\n    this.changeVel();\n\n    let mag = Math.sqrt(this.vel[0]*this.vel[0] + this.vel[1]*this.vel[1]);\n\n    if (mag > 4) {\n      this.vel[0] = this.vel[0] / mag * 4;\n      this.vel[1] = this.vel[1] / mag * 4;\n    }\n\n    // Avoid Walls X\n    if (this.pos[0] > 1450) {\n      const diffX = 1600 - this.pos[0];\n      this.vel[0] += -1 / (diffX / 25);\n    }\n    if (this.pos[0] < 100) {\n      this.vel[0] += 1 / (this.pos[0] / 25);\n    }\n\n    // Avoid Walls Y\n    if (this.pos[1] > 800) {\n      const diffY = 900 - this.pos[1];\n      this.vel[1] += -1 / (diffY / 25);\n    }\n    if (this.pos[1] < 100) {\n      this.vel[1] += 1 / (this.pos[1] / 25);\n    }\n\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n\n    this.pos[0] = this.pos[0];\n    this.pos[1] = this.pos[1];\n\n    this.flock.wrap(this.pos);\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 2*Math.PI, false);\n    ctx.lineWidth = 0;\n    // ctx.stroke();\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bird.js\n// module id = 1\n// module chunks = 0","import Bird from './bird';\n\nexport default class Flock {\n  constructor(num) {\n    this.numBirds = num;\n    this.birds = [];\n    this.neighborRadius = 50;\n    this.separationRadius = 25;\n  }\n\n  populateFlock() {\n    const colors = ['black','red','blue','green','yellow','orange','purple'];\n    for (let i = 0; i < this.numBirds; i++) {\n      const rand = colors[Math.floor(Math.random() * colors.length)];\n      const pos = this.randomPos();\n      const vel = this.randomVel();\n      this.birds.push(new Bird(this, {key: i, pos: pos, vel: vel, radius: 4, color: 'black'}));\n    }\n    // this.birds.push(new Bird(this, {key: -5, pos: this.randomPos(), vel: this.randomVel(), radius: 4, color: 'yellow'}));\n  }\n\n  wrap(pos) {\n    if (pos[0] > 1600) {\n      pos[0] = 0;\n    } else if (pos[0] < 0) {\n      pos[0] = 1600;\n    }\n    if (pos[1] > 900) {\n      pos[1] = 0;\n    } else if (pos[1] < 0) {\n      pos[1] = 900;\n    }\n  }\n\n  randomPos() {\n    const xPos = Math.floor(Math.random()*1600);\n    const yPos = Math.floor(Math.random()*900);\n    return [xPos, yPos];\n  }\n\n  randomVel() {\n    const xVel = Math.floor(Math.random()*5) - 2.5;\n    const yVel = Math.floor(Math.random()*5) - 2.5;\n    return [xVel, yVel];\n  }\n\n  moveBirds() {\n    for (let i = 0; i < this.birds.length; i++) {\n      this.birds[i].move();\n    }\n  }\n\n  draw(ctx) {\n    this.moveBirds();\n    ctx.clearRect(0, 0, 1600, 900);\n    for (let i = 0; i < this.birds.length; i++) {\n      this.birds[i].draw(ctx);\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/flock.js\n// module id = 2\n// module chunks = 0","import Birdy from './bird3d';\n\nexport default class Flocky {\n  constructor(num) {\n    this.numBirds = num;\n    this.birds = [];\n    this.neighborRadius = 70;\n    this.separationRadius = 25;\n  }\n\n  populateFlock() {\n    const colors = ['black','red','blue','green','purple'];\n    for (let i = 0; i < this.numBirds; i++) {\n      const rand = colors[Math.floor(Math.random() * colors.length)];\n      const pos = this.randomPos();\n      const vel = this.randomVel();\n      this.birds.push(new Birdy(this, {key: i, pos: pos, vel: vel, radius: 4, color: rand}));\n    }\n    // this.birds.push(new Bird(this, {key: -5, pos: this.randomPos(), vel: this.randomVel(), radius: 4, color: 'yellow'}));\n  }\n\n  wrap(pos) {\n    if (pos[0] > 1600) {\n      pos[0] = 0;\n    } else if (pos[0] < 0) {\n      pos[0] = 1600;\n    }\n    if (pos[1] > 900) {\n      pos[1] = 0;\n    } else if (pos[1] < 0) {\n      pos[1] = 900;\n    }\n  }\n\n  randomPos() {\n    const xPos = Math.floor(Math.random()*1600);\n    const yPos = Math.floor(Math.random()*900);\n    const zPos = Math.floor(Math.random()*1500);\n    return [xPos, yPos, zPos];\n  }\n\n  randomVel() {\n    const xVel = Math.floor(Math.random()*5) - 2.5;\n    const yVel = Math.floor(Math.random()*5) - 2.5;\n    const zVel = Math.floor(Math.random()*5) - 2.5;\n    return [xVel, yVel, zVel];\n  }\n\n  moveBirds() {\n    for (let i = 0; i < this.birds.length; i++) {\n      this.birds[i].move();\n    }\n  }\n\n  draw(ctx) {\n    this.moveBirds();\n    ctx.clearRect(0, 0, 1600, 900);\n    for (let i = 0; i < this.birds.length; i++) {\n      this.birds[i].draw(ctx);\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/flock3d.js\n// module id = 3\n// module chunks = 0","export default class Birdy {\n  constructor(flock, hash) {\n    this.flock = flock;\n    this.key = hash['key'];\n    this.pos = hash['pos'];\n    this.vel = hash['vel'];\n    this.radius = hash['radius'];\n    this.color = hash['color'];\n\n    this.changeVel = this.changeVel.bind(this);\n  }\n\n  changeVel() {\n\n    // Defaults 0.2, 0.5, 0.2\n    const sepFactor = 1;\n    const alignmentFactor = 1;\n    const cohesionFactor = 1;\n\n\n    const birds = this.flock.birds;\n    let centroid = [0, 0, 0];\n    let flockVel = [0, 0, 0];\n\n    let count = 0;\n    for (let i = 0; i < birds.length; i++) {\n      const bird = birds[i];\n\n      // Distance\n      const xDif = bird.pos[0] - this.pos[0];\n      const yDif = bird.pos[1] - this.pos[1];\n      const zDif = bird.pos[2] - this.pos[2];\n      const dist = Math.sqrt(xDif*xDif + yDif*yDif + zDif*zDif);\n\n      if (dist < this.flock.neighborRadius && bird.key !== this.key) {\n        centroid[0] += bird.pos[0];\n        centroid[1] += bird.pos[1];\n        centroid[2] += bird.pos[2];\n\n        flockVel[0] += bird.vel[0];\n        flockVel[1] += bird.vel[1];\n        flockVel[2] += bird.vel[2];\n\n        if (dist < this.flock.separationRadius) {\n          const xSep = xDif/dist;\n          const ySep = yDif/dist;\n          const zSep = zDif/dist;\n\n          const force = this.flock.separationRadius - dist;\n\n          // Separation\n          this.vel[0] += -1 * xSep * force * sepFactor;\n          this.vel[1] += -1 * ySep * force * sepFactor;\n          this.vel[2] += -1 * zSep * force * sepFactor;\n        }\n\n        count += 1;\n      }\n    }\n\n    if (count > 0) {\n      centroid[0] = centroid[0] / count;\n      centroid[1] = centroid[1] / count;\n      centroid[2] = centroid[2] / count;\n\n      // Alignment\n      flockVel[0] = flockVel[0] / count;\n      flockVel[1] = flockVel[1] / count;\n      flockVel[2] = flockVel[2] / count;\n\n      this.vel[0] += flockVel[0] * alignmentFactor;\n      this.vel[1] += flockVel[1] * alignmentFactor;\n      this.vel[2] += flockVel[2] * alignmentFactor;\n\n\n      // Cohesion\n      let delVel = [centroid[0] - this.pos[0], centroid[1] - this.pos[1], centroid[2] - this.pos[2]];\n      let delMag = Math.sqrt(delVel[0]*delVel[0] + delVel[1]*delVel[1] + delVel[2]*delVel[2]);\n      delVel[0] = delVel[0] / delMag;\n      delVel[1] = delVel[1] / delMag;\n      delVel[2] = delVel[2] / delMag;\n\n      this.vel[0] += delVel[0] * cohesionFactor;\n      this.vel[1] += delVel[1] * cohesionFactor;\n      this.vel[2] += delVel[2] * cohesionFactor;\n\n    }\n  }\n\n  move() {\n    this.changeVel();\n\n    let mag = Math.sqrt(this.vel[0]*this.vel[0] + this.vel[1]*this.vel[1] + this.vel[2]*this.vel[2]);\n\n    if (mag > 8) {\n      this.vel[0] = this.vel[0] / mag * 8;\n      this.vel[1] = this.vel[1] / mag * 8;\n      this.vel[2] = this.vel[2] / mag * 8;\n    }\n\n    // Avoid Walls X\n    if (this.pos[0] > 1450) {\n      const diffX = 1600 - this.pos[0];\n      this.vel[0] += -1 / (diffX / 25);\n    }\n    if (this.pos[0] < 100) {\n      this.vel[0] += 1 / (this.pos[0] / 25);\n    }\n\n    // Avoid Walls Y\n    if (this.pos[1] > 800) {\n      const diffY = 900 - this.pos[1];\n      this.vel[1] += -1 / (diffY / 25);\n    }\n    if (this.pos[1] < 100) {\n      this.vel[1] += 1 / (this.pos[1] / 25);\n    }\n\n    // Avoid Walls Z\n    if (this.pos[2] > 1400) {\n      const diffZ = 1500 - this.pos[2];\n      this.vel[2] += -1 / (diffZ / 25);\n    }\n    if (this.pos[2] < 100) {\n      // console.log(this.vel[2]);\n      this.vel[2] += 1 / (this.pos[2] / 25);\n      // console.log(this.vel[2]);\n    }\n\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n    this.pos[2] += this.vel[2];\n\n    // this.pos[0] = this.pos[0];\n    // this.pos[1] = this.pos[1];\n\n    // this.flock.wrap(this.pos);\n  }\n\n  draw(ctx) {\n\n    const depth = this.pos[2];\n    const rad = (1500 - depth)/1500 * 7 + 2;\n    const colorVal = (rad - 2) * (100 / 7);\n\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], rad, 2*Math.PI, false);\n    ctx.lineWidth = 0;\n    // ctx.stroke();\n    // ctx.fillStyle = `rgb(${colorVal}, ${colorVal}, ${colorVal})`;\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bird3d.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}